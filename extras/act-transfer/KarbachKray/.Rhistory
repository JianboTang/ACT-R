uartz(width=6,height=6)#
par(lwd=2)#
plot((1:10*5),data.m[1,,1],type="b",pch=4,ylim=c(0,10),xlim=c(0,100),main="Component Step latency (model)",xlab="Problem",ylab="Time (s)")#
lines(c(62.5,87.5),data.mb[2,,1],type="b",pch=3)#
lines(c(62.5,87.5),data.mb[3,,1],type="b",pch=2)#
lines(c(62.5,87.5),data.mb[4,,1],type="b",pch=1)#
legend(30,9,legend=c("Training","Control","Transferred integrative","Transferred component"),lty=1,pch=c(4,1:3))#
#
quartz(width=6,height=6)#
par(lwd=2)#
plot((1:10*5),data.m[1,,2],type="b",pch=4,ylim=c(0,10),xlim=c(0,100),main="Integrative Step latency (model)",xlab="Problem",ylab="Time (s)")#
lines(c(62.5,87.5),data.mb[2,,2],type="b",pch=3)#
lines(c(62.5,87.5),data.mb[3,,2],type="b",pch=2)#
lines(c(62.5,87.5),data.mb[4,,2],type="b",pch=1)#
legend(30,9,legend=c("Training","Control","Transferred integrative","Transferred component"),lty=1,pch=c(4,1:3))
dada <- c( 0, 5.9, 6.7, 0.8, 3.6, 9.2, 6.6, 13.9, 11.2, 13.9, 11.8, 9.1, 12.5, 12.8, 12.8, 16.8, 15.5, 13.9, 20.8, 22.5)#
dada <- (dada/100+1)*4.33 #
dat <- read.table("WMChein.txt")#
names(dat) <- c("day","span","correct")#
dat.m <- with(dat[dat$correct==1,],tapply(span,day,mean))#
#dat.m <- with(dat,tapply(span,day,mean))#
quartz(width=5,height=5)#
par(lwd=2)#
plot(dat.m,type="b",ylab="WM Span (items)",xlab="Training session",ylim=c(1,6))#
lines(dada,type="b",pch=2)#
legend(1,6,legend=c("Data","Model"),pch=c(2,1),lty=1)
dada <- c( 0, 5.9, 6.7, 0.8, 3.6, 9.2, 6.6, 13.9, 11.2, 13.9, 11.8, 9.1, 12.5, 12.8, 12.8, 16.8, 15.5, 13.9, 20.8, 22.5)#
dada <- (dada/100+1)*4.33 #
dat <- read.table("WMChein.txt")#
names(dat) <- c("day","span","correct")#
dat.m <- with(dat[dat$correct==1,],tapply(span,day,mean))#
#dat.m <- with(dat,tapply(span,day,mean))#
quartz(width=5,height=5)#
par(lwd=2)#
plot(dat.m,type="b",ylab="WM Span (items)",xlab="Training session",ylim=c(1,6))#
lines(dada,type="b",pch=2)#
legend(1,6,legend=c("Data","Model"),pch=c(2,1),lty=1)
dada <- c( 0, 5.9, 6.7, 0.8, 3.6, 9.2, 6.6, 13.9, 11.2, 13.9, 11.8, 9.1, 12.5, 12.8, 12.8, 16.8, 15.5, 13.9, 20.8, 22.5)#
dada <- (dada/100+1)*4.33 #
dat <- read.table("WMChein.txt")#
names(dat) <- c("day","span","correct")#
dat.m <- with(dat[dat$correct==1,],tapply(span,day,mean))#
#dat.m <- with(dat,tapply(span,day,mean))#
quartz(width=5,height=5)#
par(lwd=2)#
plot(dada,type="b",ylab="WM Span (items)",xlab="Training session",ylim=c(3,6))#
#
legend(1,6,legend=c("Data","Model"),pch=c(2,1),lty=1)
dat <- read.table("stroopChein.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
res#
res[,,2]-res[,,1]#
#quartz(width=4,height=4)#
exp.stroop <- rbind(c(120,95),c(120,60))#
#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.stroop[1,],ylim=c(0,160),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")#
lines(2:3,exp.stroop[2,],type="b",pch=2)#
lines(4:5,(res[,1,2]-res[,1,1])*1000,type="b")#
lines(4:5,(res[,2,2]-res[,2,1])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,160,legend=c("No training","WM training"),pch=1:2,lty=1)
exp.stroop <- rbind(c(120,95),c(120,60))#
#
quartz(width=4,height=5)#
par(lwd=2)#
plot(2:3,exp.stroop[1,],ylim=c(0,160),type="b",xlab="",xaxt="n",xlim=c(1,4),ylab="Stroop Interference (ms)")#
lines(2:3,exp.stroop[2,],type="b",pch=2)#
axis(1,at=2:3,labels=c("Data Pre","Data Post"))#
legend(1,160,legend=c("No training","WM training"),pch=1:2,lty=1)
dat2 <- read.table("WMCheinNR.txt")#
dat <- read.table("WMChein.txt")#
names(dat) <- c("day","span","correct")#
names(dat2) <- c("day","span","correct")#
dat.m <- with(dat[dat$correct==1,],tapply(span,day,mean))#
dat2.m <- with(dat2[dat2$correct==1,],tapply(span,day,mean))#
#
#dat.m <- with(dat,tapply(span,day,mean))#
quartz(width=5,height=5)#
par(lwd=2)#
plot(dat.m,type="b",ylab="WM Span (items)",xlab="Training session",ylim=c(1,6))#
lines(dat2.m,type="b",pch=2)#
legend(1,6,legend=c("No rehearsal model","Rehearsal model"),pch=c(2,1),lty=1)
dat <- read.table("stroopChein.txt")#
dat2 <- read.table("stroopCheinNR.txt")#
#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
names(dat2) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
res2 <- with(dat2,tapply(RT,list(day,condition,type),mean))
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,(res2[,1,2]-res2[,1,1])*1000,ylim=c(0,160),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)")#
lines(2:3,(res2[,2,2]-res2[,2,1])*1000,type="b",pch=2)#
lines(4:5,(res[,1,2]-res[,1,1])*1000,type="b")#
lines(4:5,(res[,2,2]-res[,2,1])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Pre","Post","Pre","Post"))#
text(c(2.8,5),c(110,90),labels=c("No rehearsal\nmodel","Rehearsal\nmodel"))#
legend(1,50,legend=c("No training","WM training"),pch=1:2,lty=1)
dada <- c( 0, 5.9, 6.7, 0.8, 3.6, 9.2, 6.6, 13.9, 11.2, 13.9, 11.8, 9.1, 12.5, 12.8, 12.8, 16.8, 15.5, 13.9, 20.8, 22.5)#
dada <- (dada/100+1)*4.33 #
dat <- read.table("WMChein.txt")#
names(dat) <- c("day","span","correct")#
dat.m <- with(dat[dat$correct==1,],tapply(span,day,mean))#
#dat.m <- with(dat,tapply(span,day,mean))#
quartz(width=5,height=5)#
par(lwd=2)#
plot(dat.m,type="b",ylab="WM Span (items)",xlab="Training session",ylim=c(1,6))#
lines(dada,type="b",pch=2)#
legend(1,6,legend=c("Data","Model"),pch=c(2,1),lty=1)
dat <- read.table("stroopChein.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
#
exp.stroop <- rbind(c(120,95),c(120,60))#
#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.stroop[1,],ylim=c(0,160),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")#
lines(2:3,exp.stroop[2,],type="b",pch=2)#
lines(4:5,(res[,1,2]-res[,1,1])*1000,type="b")#
lines(4:5,(res[,2,2]-res[,2,1])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,160,legend=c("No training","WM training"),pch=1:2,lty=1)
dat <- read.table("task-switching.txt")#
names(dat) <- c("condition","day","task","trialtype","trial","time")#
dat <- dat[dat$trial != 1,]#
dat.m <- with(dat[dat$day %in% c(1,6),],tapply(time,list(condition,day,trialtype),mean))#
#
quartz(width=8,height=4)#
#
par(mfrow=c(1,2))#
dat.mixing <- (dat.m[,,"SWITCH"] + dat.m[,,"REPEAT"] - 2*dat.m[,,"SINGLE"])/2#
barplot(t(dat.mixing),beside=TRUE,main="Mixing costs")#
dat.switching <- dat.m[,,"SWITCH"] - dat.m[,,"REPEAT"]#
barplot(t(dat.switching),beside=TRUE,main="Switch costs")
dat <- read.table("task-switching.txt")#
names(dat) <- c("condition","day","task","trialtype","trial","time")#
dat <- dat[dat$trial != 1,]#
dat.m <- with(dat[dat$day %in% c(1,6),],tapply(time,list(condition,day,trialtype),mean))#
#
quartz(width=8,height=4)#
#
par(mfrow=c(1,2))#
dat.switching <- dat.m[,,"SWITCH"] - dat.m[,,"REPEAT"]#
#
exp.mixing <- rbind(c(360,270),c(360,90))#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.switching[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)",main="Task Switching")#
lines(2:3,exp.switching[2,],type="b",pch=2)#
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
dat <- read.table("task-switching.txt")#
names(dat) <- c("condition","day","task","trialtype","trial","time")#
dat <- dat[dat$trial != 1,]#
dat.m <- with(dat[dat$day %in% c(1,6),],tapply(time,list(condition,day,trialtype),mean))#
#
quartz(width=8,height=4)#
#
par(mfrow=c(1,2))#
dat.switching <- dat.m[,,"SWITCH"] - dat.m[,,"REPEAT"]#
#
exp.switching <- rbind(c(385,280),c(325,140))#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.switching[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)",main="Task Switching")#
lines(2:3,exp.switching[2,],type="b",pch=2)#
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
dat <- read.table("digitspan.txt")#
names(dat) <- c("day","condition","span","numresponded","numcorrect","accuracy")#
dat$mult <- dat$accuracy * dat$span#
dat.m <- with(dat,tapply(mult,list(condition,day),sum))#
dat.m <- dat.m/length(dat$day)#
preSingle <- (47.3+66.1+56.3)/3#
preSwitch <- (45.8+71.6+55.1)/3#
postSingle <- (47.8+68.3+58)/3#
postSwitch <- (56+81.3+62.4)/3#
#
exp.data <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))/100#
#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.data[1,],ylim=c(0,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct",main="Count Span")#
lines(2:3,exp.data[2,],type="b",pch=2)#
lines(4:5,dat.m[1,],type="b")#
lines(4:5,dat.m[2,],type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,1,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
dat <- read.table("stroop.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
preSingle <- (70+30+57)/3#
preSwitch <- (48+57+77)/3#
postSingle <- (72+48+72)/3#
postSwitch <- (24+27+56)/3#
#
exp.stroop <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))#
#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.stroop[1,],ylim=c(0,100),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")#
lines(2:3,exp.stroop[2,],type="b",pch=2)#
lines(4:5,(res[,1,1]-res[,1,2])*1000,type="b")#
lines(4:5,(res[,2,1]-res[,2,2])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,100,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
par(mfrow=c(2,2))#
plot(density(dat[dat$condition=="SWITCH" & dat$type=="NEUTRAL" & dat$day==1,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SWITCH" & dat$type=="NEUTRAL" & dat$day==6,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SWITCH" & dat$type=="INCONGRUENT" & dat$day==1,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SWITCH" & dat$type=="INCONGRUENT" & dat$day==6,]$RT),xlim=c(1,3))
par(mfrow=c(2,2))#
plot(density(dat[dat$condition=="SINGLE" & dat$type=="NEUTRAL" & dat$day==1,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SINGLE" & dat$type=="NEUTRAL" & dat$day==6,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SINGLE" & dat$type=="INCONGRUENT" & dat$day==1,]$RT),xlim=c(1,3))#
plot(density(dat[dat$condition=="SINGLE" & dat$type=="INCONGRUENT" & dat$day==6,]$RT),xlim=c(1,3))
dat <- read.table("task-switching.txt")#
names(dat) <- c("condition","day","task","trialtype","trial","time")#
dat <- dat[dat$trial != 1,]#
dat.m <- with(dat[dat$day %in% c(1,6),],tapply(time,list(condition,day,trialtype),mean))#
#
quartz(width=8,height=4)#
#
par(mfrow=c(1,2))#
dat.switching <- dat.m[,,"SWITCH"] - dat.m[,,"REPEAT"]#
#
exp.switching <- rbind(c(385,280),c(325,140))#
quartz(width=7,height=5)#
par(lwd=2)#
plot(2:3,exp.switching[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)",main="Task Switching")#
lines(2:3,exp.switching[2,],type="b",pch=2)#
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
(379+217+341)/3
exp.switching <- (rbind(c(379,280),c(327,146))+rbind(c(217,174),c(200,104))+rbind(c(342,267),c(305,196)))/3
exp.switching
exp.switching.se <- (rbind(c(426-379,324-280),c(368-327,185-146)))
exp.switching.se
exp.switching.se <- (rbind(c(426-379,324-280),c(368-327,185-146))*sqrt(14) +#
					 rbind(c(269-217,227-174),c(227-200,134-104))*sqrt(14) +#
					 rbind(c(408-341,301-267),c(333-305,225-196))*sqrt(14)) /3 / sqrt(42)
exp.switching.se
rbind(c(426-379,324-280),c(368-327,185-146))*sqrt(14)
rbind(c(269-217,227-174),c(227-200,134-104))*sqrt(14)
rbind(c(408-341,301-267),c(333-305,225-196))*sqrt(14)
dat <- read.table("task-switching.txt")#
names(dat) <- c("condition","day","task","trialtype","trial","time")#
dat <- dat[dat$trial != 1,]#
dat.m <- with(dat[dat$day %in% c(1,6),],tapply(time,list(condition,day,trialtype),mean))#
#
quartz(width=8,height=4)#
#
par(mfrow=c(1,2))#
dat.switching <- dat.m[,,"SWITCH"] - dat.m[,,"REPEAT"]#
#
exp.switching <- (rbind(c(379,280),c(327,146))+rbind(c(217,174),c(200,104))+rbind(c(342,267),c(305,196)))/3#
#
#exp.switching <- rbind(c(385,280),c(325,140))#
exp.switching.se <- (rbind(c(426-379,324-280),c(368-327,185-146))*sqrt(14) +#
					 rbind(c(269-217,227-174),c(227-200,134-104))*sqrt(14) +#
					 rbind(c(408-341,301-267),c(333-305,225-196))*sqrt(14)) /3 / sqrt(42) #
library(Hmisc)#
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.switching[1,],exp.switching[1,]+exp.switching.se[1,],exp.switching[1,]-exp.switching.se[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)",main="Task Switching")
errbar(2:3,exp.switching[2,],exp.switching[2,]+exp.switching.se[2,],exp.switching[2,]-exp.switching.se[2,],type="b",pch=2,add=T)
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
dat <- read.table("digitspan.txt")#
names(dat) <- c("day","condition","span","numresponded","numcorrect","accuracy")#
dat$mult <- dat$accuracy * dat$span#
dat.m <- with(dat,tapply(mult,list(condition,day),sum))#
dat.m <- dat.m/length(dat$day)#
preSingle <- (47.3+66.1+56.3)/3#
preSwitch <- (45.8+71.6+55.1)/3#
postSingle <- (47.8+68.3+58)/3#
postSwitch <- (56+81.3+62.4)/3#
#
exp.data <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))/100#
exp.data.se <- rbind(c(11.4+12.7+16.8,24+16.3+15.8),c(13.4+16.1+15.9,17.2+15.3+18.6))/300/sqrt(42)
exp.data.se
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.data[1,],exp.data[1,]+exp.data.se[1,],,exp.data[1,]-exp.data.se[1,],ylim=c(0,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct",main="Count Span")
errbar(2:3,exp.data[1,],exp.data[1,]+exp.data.se[1,],exp.data[1,]-exp.data.se[1,],ylim=c(0,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct",main="Count Span")
errbar(2:3,exp.data[2,],exp.data[2,]+exp.data.se[2,],exp.data[2,]-exp.data.se[2,],type="b",pch=2,add=T)
lines(4:5,dat.m[1,],type="b")#
lines(4:5,dat.m[2,],type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,1,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1)
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.data[1,],exp.data[1,]+exp.data.se[1,],exp.data[1,]-exp.data.se[1,],ylim=c(0,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct",main="Count Span")#
errbar(2:3,exp.data[2,],exp.data[2,]+exp.data.se[2,],exp.data[2,]-exp.data.se[2,],type="b",pch=2,add=T)#
lines(4:5,dat.m[1,],type="b")#
lines(4:5,dat.m[2,],type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,1,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.switching[1,],exp.switching[1,]+exp.switching.se[1,],exp.switching[1,]-exp.switching.se[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)",main="Task Switching")#
errbar(2:3,exp.switching[2,],exp.switching[2,]+exp.switching.se[2,],exp.switching[2,]-exp.switching.se[2,],type="b",pch=2,add=T)#
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
dat <- read.table("stroop.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
preSingle <- (70+30+57)/3#
preSwitch <- (48+57+77)/3#
postSingle <- (72+48+72)/3#
postSwitch <- (24+27+56)/3#
#
exp.stroop <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))#
exp.stroop.se <- rbind(c(42+31+57,49+41+55),c(61+41+81,53+34+46)) /3 /sqrt(42)#
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.stroop[1,],exp.stroop[1,]+exp.stroop.se[1,],exp.stroop[1,]-exp.stroop.se[1,],ylim=c(0,100),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")
lines(2:3,exp.stroop[2,],exp.stroop[2,]+exp.stroop.se[2,],exp.stroop[2,]-exp.stroop.se[2,],type="b",pch=2)
errbar(2:3,exp.stroop[2,],exp.stroop[2,]+exp.stroop.se[2,],exp.stroop[2,]-exp.stroop.se[2,],type="b",pch=2,add=T)
lines(4:5,(res[,1,1]-res[,1,2])*1000,type="b")#
lines(4:5,(res[,2,1]-res[,2,2])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,100,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
dat <- read.table("stroop.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
preSingle <- (70+30+57)/3#
preSwitch <- (48+57+77)/3#
postSingle <- (72+48+72)/3#
postSwitch <- (24+27+56)/3#
#
exp.stroop <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))#
exp.stroop.se <- rbind(c(42+31+57,49+41+55),c(61+41+81,53+34+46)) /3 /sqrt(42)#
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.stroop[1,],exp.stroop[1,]+exp.stroop.se[1,],exp.stroop[1,]-exp.stroop.se[1,],ylim=c(0,100),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")#
errbar(2:3,exp.stroop[2,],exp.stroop[2,]+exp.stroop.se[2,],exp.stroop[2,]-exp.stroop.se[2,],type="b",pch=2,add=T)#
lines(4:5,(res[,1,1]-res[,1,2])*1000,type="b")#
lines(4:5,(res[,2,1]-res[,2,2])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,100,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
dat <- read.table("stroop.txt")#
names(dat) <- c("task","condition","block","day","trial","type","correct","RT")#
res <- with(dat,tapply(RT,list(day,condition,type),mean))#
preSingle <- (70+30+57)/3#
preSwitch <- (48+57+77)/3#
postSingle <- (72+48+72)/3#
postSwitch <- (24+27+56)/3#
#
exp.stroop <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))#
exp.stroop.se <- rbind(c(42+31+57,49+41+55),c(61+41+81,53+34+46)) /3 /sqrt(42)#
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.stroop[1,],exp.stroop[1,]+exp.stroop.se[1,],exp.stroop[1,]-exp.stroop.se[1,],ylim=c(0,100),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Interference (ms)",main="Stroop")#
errbar(2:3,exp.stroop[2,],exp.stroop[2,]+exp.stroop.se[2,],exp.stroop[2,]-exp.stroop.se[2,],type="b",pch=2,add=T)#
lines(4:5,(res[,1,1]-res[,1,2])*1000,type="b")#
lines(4:5,(res[,2,1]-res[,2,2])*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,100,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
title(main="Stroop")
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.switching[1,],exp.switching[1,]+exp.switching.se[1,],exp.switching[1,]-exp.switching.se[1,],ylim=c(0,600),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Switching costs (ms)")#
title(main="Task Switching")#
errbar(2:3,exp.switching[2,],exp.switching[2,]+exp.switching.se[2,],exp.switching[2,]-exp.switching.se[2,],type="b",pch=2,add=T)#
lines(4:5,dat.switching[1,]*1000,type="b")#
lines(4:5,dat.switching[2,]*1000,type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,600,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
dat <- read.table("digitspan.txt")#
names(dat) <- c("day","condition","span","numresponded","numcorrect","accuracy")#
dat$mult <- dat$accuracy * dat$span#
dat.m <- with(dat,tapply(mult,list(condition,day),sum))#
dat.m <- dat.m/length(dat$day)#
preSingle <- (47.3+66.1+56.3)/3#
preSwitch <- (45.8+71.6+55.1)/3#
postSingle <- (47.8+68.3+58)/3#
postSwitch <- (56+81.3+62.4)/3#
#
exp.data <- rbind(c(preSingle,postSingle),c(preSwitch,postSwitch))/100#
exp.data.se <- rbind(c(11.4+12.7+16.8,24+16.3+15.8),c(13.4+16.1+15.9,17.2+15.3+18.6))/300/sqrt(42)#
#
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.data[1,],exp.data[1,]+exp.data.se[1,],exp.data[1,]-exp.data.se[1,],ylim=c(0,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct")#
title(main="Count Span")#
errbar(2:3,exp.data[2,],exp.data[2,]+exp.data.se[2,],exp.data[2,]-exp.data.se[2,],type="b",pch=2,add=T)#
lines(4:5,dat.m[1,],type="b")#
lines(4:5,dat.m[2,],type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,1,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
quartz(width=7,height=5)#
par(lwd=2)#
errbar(2:3,exp.data[1,],exp.data[1,]+exp.data.se[1,],exp.data[1,]-exp.data.se[1,],ylim=c(0.4,1),type="b",xlab="",xaxt="n",xlim=c(1,6),ylab="Proportion correct")#
title(main="Count Span")#
errbar(2:3,exp.data[2,],exp.data[2,]+exp.data.se[2,],exp.data[2,]-exp.data.se[2,],type="b",pch=2,add=T)#
lines(4:5,dat.m[1,],type="b")#
lines(4:5,dat.m[2,],type="b",pch=2)#
axis(1,at=2:5,labels=c("Data Pre","Data Post","Model Pre","Model Post"))#
legend(1,1,legend=c("Single Task training","Task Switching training"),pch=1:2,lty=1,bty="n")
